<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 25.2.3">

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Boolean.valueOf(true)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            loadOnStartup.put(GRAPHICS_SETTINGS_PATH, new Boolean(true));"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="290"
            column="55"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Boolean.valueOf(true)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            loadOnStartup.put(AUDIO_SETTINGS_PATH, new Boolean(true));"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="291"
            column="52"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Integer.valueOf(ParticleSettings.MAX)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            graphicSettings.put(Settings.PARTICLE_SETTINGS, new Integer(ParticleSettings.MAX));"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="306"
            column="61"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Boolean.valueOf(false)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            graphicSettings.put(Settings.LINEAR_FILTERING, new Boolean(false));"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="307"
            column="60"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Boolean.valueOf(true)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            graphicSettings.put(Settings.USE_SHADERS, new Boolean(true));"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="308"
            column="55"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Boolean.valueOf(false)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            graphicSettings.put(Settings.MULTI_THREADED, new Boolean(false));"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="309"
            column="58"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(1)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            audioSettings.put(Audio.MASTER_VOLUME_KEY, new Float(1));"
        errorLine2="                                                       ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="318"
            column="56"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(1)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            audioSettings.put(Audio.MUSIC_VOLUME_KEY, new Float(1));"
        errorLine2="                                                      ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="319"
            column="55"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(1)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            audioSettings.put(Audio.VOICE_VOLUME_KEY, new Float(1));"
        errorLine2="                                                      ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="320"
            column="55"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(1)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            audioSettings.put(Audio.EFFECTS_VOLUME_KEY, new Float(1));"
        errorLine2="                                                        ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="321"
            column="57"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(1)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            audioSettings.put(Audio.ENVIRONMENT_VOLUME_KEY, new Float(1));"
        errorLine2="                                                            ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="322"
            column="61"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(1)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            audioSettings.put(Audio.UI_VOLUME_KEY, new Float(1));"
        errorLine2="                                                   ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="323"
            column="52"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Boolean.valueOf(loadOnStartup)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="                this.loadOnStartup.put(dataName, new Boolean(loadOnStartup));"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\AppData.java"
            line="443"
            column="50"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(value)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="                Lumm.data.audioSettings.put(MASTER_VOLUME_KEY, new Float(value));"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="92"
            column="64"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(value)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="                Lumm.data.audioSettings.put(MUSIC_VOLUME_KEY, new Float(value));"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="95"
            column="63"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(value)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="                Lumm.data.audioSettings.put(VOICE_VOLUME_KEY, new Float(value));"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="98"
            column="63"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(value)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="                Lumm.data.audioSettings.put(EFFECTS_VOLUME_KEY, new Float(value));"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="101"
            column="65"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(value)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="                Lumm.data.audioSettings.put(ENVIRONMENT_VOLUME_KEY, new Float(value));"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="104"
            column="69"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(value)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="                Lumm.data.audioSettings.put(UI_VOLUME_KEY, new Float(value));"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="107"
            column="60"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(value)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="        Lumm.data.audioSettings.put(customAudioChannel, new Float(value));"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="122"
            column="57"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Warning"
        message="Use `Float.valueOf(1)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance."
        errorLine1="            Lumm.data.audioSettings.put(customAudioChannel, new Float(1));"
        errorLine2="                                                            ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="G:\WORKSPACE\Lumm\Core\lumm\core\src\main\java\com\sidereal\lumm\architecture\core\Audio.java"
            line="156"
            column="61"/>
    </issue>

</issues>
